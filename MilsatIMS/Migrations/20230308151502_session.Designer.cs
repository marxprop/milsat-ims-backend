// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MilsatIMS.Data;

#nullable disable

namespace MilsatIMS.Migrations
{
    [DbContext(typeof(MilsatIMSContext))]
    [Migration("20230308151502_session")]
    partial class session
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("MilsatIMS.Models.Intern", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)");

                    b.Property<string>("CourseOfStudy")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Institution")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("UserId");

                    b.ToTable("Intern");
                });

            modelBuilder.Entity("MilsatIMS.Models.InternMentorSession", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<Guid>("InternId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("MentorId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("SessionId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("InternId");

                    b.HasIndex("MentorId");

                    b.HasIndex("SessionId");

                    b.ToTable("IMS");
                });

            modelBuilder.Entity("MilsatIMS.Models.Mentor", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("UserId");

                    b.ToTable("Mentor");
                });

            modelBuilder.Entity("MilsatIMS.Models.Prompt", b =>
                {
                    b.Property<Guid>("PromptId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Info")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("PublishDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("PromptId");

                    b.ToTable("Prompt");
                });

            modelBuilder.Entity("MilsatIMS.Models.Session", b =>
                {
                    b.Property<Guid>("SessionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("SessionId");

                    b.ToTable("Session");
                });

            modelBuilder.Entity("MilsatIMS.Models.User", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Bio")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("longblob");

                    b.Property<string>("PasswordResetToken")
                        .HasColumnType("longtext");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("longblob");

                    b.Property<DateTime>("PasswordTokenExpires")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ProfilePicture")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("RefreshToken")
                        .HasColumnType("longtext");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<int>("Team")
                        .HasColumnType("int");

                    b.Property<DateTime>("TokenCreated")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("TokenExpires")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("isDeleted")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("UserId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = new Guid("9141374b-01d1-4afe-b160-2326b454675c"),
                            Bio = "",
                            Email = "admin@milsat.com",
                            FullName = "Admin",
                            Gender = 0,
                            PasswordHash = new byte[] { 206, 143, 93, 203, 168, 89, 67, 199, 20, 176, 166, 78, 89, 239, 252, 47, 182, 125, 32, 47, 235, 170, 196, 14, 201, 106, 243, 92, 28, 11, 111, 126, 227, 15, 238, 104, 41, 83, 52, 63, 3, 80, 107, 251, 230, 94, 171, 230, 138, 239, 88, 49, 193, 104, 148, 165, 39, 162, 130, 134, 144, 91, 209, 201 },
                            PasswordSalt = new byte[] { 253, 130, 92, 112, 234, 82, 201, 128, 220, 216, 198, 115, 242, 67, 81, 99, 84, 140, 22, 142, 5, 221, 46, 140, 176, 143, 0, 73, 125, 192, 79, 177, 195, 11, 76, 4, 206, 117, 235, 60, 144, 225, 5, 16, 141, 101, 159, 162, 85, 100, 186, 215, 28, 36, 82, 189, 95, 252, 193, 101, 217, 125, 214, 165, 158, 246, 156, 0, 26, 5, 144, 62, 45, 177, 234, 73, 223, 105, 248, 243, 54, 43, 159, 230, 252, 157, 17, 59, 64, 151, 106, 67, 42, 136, 149, 234, 16, 7, 125, 47, 125, 229, 188, 11, 60, 33, 126, 44, 63, 246, 101, 239, 24, 3, 255, 85, 131, 53, 195, 78, 80, 153, 223, 139, 121, 146, 16, 132 },
                            PasswordTokenExpires = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PhoneNumber = "datasolutions",
                            ProfilePicture = "",
                            Role = 0,
                            Team = 5,
                            TokenCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TokenExpires = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            isDeleted = false
                        });
                });

            modelBuilder.Entity("MilsatIMS.Models.Intern", b =>
                {
                    b.HasOne("MilsatIMS.Models.User", "User")
                        .WithOne("Intern")
                        .HasForeignKey("MilsatIMS.Models.Intern", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("MilsatIMS.Models.InternMentorSession", b =>
                {
                    b.HasOne("MilsatIMS.Models.Intern", "Intern")
                        .WithMany("IMS")
                        .HasForeignKey("InternId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MilsatIMS.Models.Mentor", "Mentor")
                        .WithMany("IMS")
                        .HasForeignKey("MentorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MilsatIMS.Models.Session", "Session")
                        .WithMany("IMS")
                        .HasForeignKey("SessionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Intern");

                    b.Navigation("Mentor");

                    b.Navigation("Session");
                });

            modelBuilder.Entity("MilsatIMS.Models.Mentor", b =>
                {
                    b.HasOne("MilsatIMS.Models.User", "User")
                        .WithOne("Mentor")
                        .HasForeignKey("MilsatIMS.Models.Mentor", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("MilsatIMS.Models.Intern", b =>
                {
                    b.Navigation("IMS");
                });

            modelBuilder.Entity("MilsatIMS.Models.Mentor", b =>
                {
                    b.Navigation("IMS");
                });

            modelBuilder.Entity("MilsatIMS.Models.Session", b =>
                {
                    b.Navigation("IMS");
                });

            modelBuilder.Entity("MilsatIMS.Models.User", b =>
                {
                    b.Navigation("Intern")
                        .IsRequired();

                    b.Navigation("Mentor")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
