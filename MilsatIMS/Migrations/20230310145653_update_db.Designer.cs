// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MilsatIMS.Data;

#nullable disable

namespace MilsatIMS.Migrations
{
    [DbContext(typeof(MilsatIMSContext))]
    [Migration("20230310145653_update_db")]
    partial class update_db
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("MilsatIMS.Models.Intern", b =>
                {
                    b.Property<Guid>("InternId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("CourseOfStudy")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Institution")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("InternId");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Intern");
                });

            modelBuilder.Entity("MilsatIMS.Models.InternMentorSession", b =>
                {
                    b.Property<Guid>("IMSId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("InternId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("MentorId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("SessionId")
                        .HasColumnType("char(36)");

                    b.HasKey("IMSId");

                    b.HasIndex("InternId");

                    b.HasIndex("MentorId");

                    b.HasIndex("SessionId");

                    b.ToTable("IMS");
                });

            modelBuilder.Entity("MilsatIMS.Models.Mentor", b =>
                {
                    b.Property<Guid>("MentorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)");

                    b.HasKey("MentorId");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Mentor");
                });

            modelBuilder.Entity("MilsatIMS.Models.Prompt", b =>
                {
                    b.Property<Guid>("PromptId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Info")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("PublishDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("PromptId");

                    b.ToTable("Prompt");
                });

            modelBuilder.Entity("MilsatIMS.Models.Session", b =>
                {
                    b.Property<Guid>("SessionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("SessionId");

                    b.ToTable("Session");
                });

            modelBuilder.Entity("MilsatIMS.Models.User", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Bio")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("longblob");

                    b.Property<string>("PasswordResetToken")
                        .HasColumnType("longtext");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("longblob");

                    b.Property<DateTime>("PasswordTokenExpires")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ProfilePicture")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("RefreshToken")
                        .HasColumnType("longtext");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<int>("Team")
                        .HasColumnType("int");

                    b.Property<DateTime>("TokenCreated")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("TokenExpires")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("isDeleted")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("UserId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = new Guid("d15590cc-ff79-4e3a-a377-af8a71d8c6cd"),
                            Bio = "",
                            Email = "admin@milsat.com",
                            FullName = "Admin",
                            Gender = 0,
                            PasswordHash = new byte[] { 47, 54, 34, 214, 23, 5, 145, 206, 181, 230, 78, 141, 236, 30, 186, 191, 173, 108, 145, 254, 66, 89, 110, 137, 34, 37, 147, 113, 54, 169, 206, 123, 15, 68, 132, 93, 94, 8, 69, 3, 70, 41, 90, 110, 159, 100, 231, 185, 114, 229, 151, 70, 116, 102, 189, 72, 125, 231, 128, 106, 51, 190, 197, 187 },
                            PasswordSalt = new byte[] { 78, 139, 14, 222, 37, 34, 66, 72, 142, 172, 237, 116, 97, 147, 125, 162, 208, 215, 231, 166, 109, 187, 110, 177, 59, 148, 179, 148, 246, 94, 12, 142, 55, 86, 32, 36, 20, 0, 79, 254, 234, 8, 127, 248, 201, 13, 226, 216, 9, 47, 219, 82, 147, 251, 105, 11, 122, 167, 50, 179, 137, 36, 8, 216, 63, 143, 238, 78, 195, 101, 108, 107, 9, 204, 232, 123, 32, 220, 225, 186, 208, 121, 228, 155, 193, 87, 191, 124, 210, 145, 138, 193, 184, 103, 233, 9, 254, 100, 69, 153, 20, 117, 91, 78, 52, 81, 78, 247, 144, 202, 144, 163, 112, 175, 134, 31, 49, 232, 65, 127, 177, 120, 248, 207, 163, 59, 162, 112 },
                            PasswordTokenExpires = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PhoneNumber = "datasolutions",
                            ProfilePicture = "",
                            Role = 0,
                            Team = 5,
                            TokenCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TokenExpires = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            isDeleted = false
                        });
                });

            modelBuilder.Entity("MilsatIMS.Models.Intern", b =>
                {
                    b.HasOne("MilsatIMS.Models.User", "User")
                        .WithOne("Intern")
                        .HasForeignKey("MilsatIMS.Models.Intern", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("MilsatIMS.Models.InternMentorSession", b =>
                {
                    b.HasOne("MilsatIMS.Models.Intern", "Intern")
                        .WithMany("IMS")
                        .HasForeignKey("InternId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MilsatIMS.Models.Mentor", "Mentor")
                        .WithMany("IMS")
                        .HasForeignKey("MentorId");

                    b.HasOne("MilsatIMS.Models.Session", "Session")
                        .WithMany("IMS")
                        .HasForeignKey("SessionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Intern");

                    b.Navigation("Mentor");

                    b.Navigation("Session");
                });

            modelBuilder.Entity("MilsatIMS.Models.Mentor", b =>
                {
                    b.HasOne("MilsatIMS.Models.User", "User")
                        .WithOne("Mentor")
                        .HasForeignKey("MilsatIMS.Models.Mentor", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("MilsatIMS.Models.Intern", b =>
                {
                    b.Navigation("IMS");
                });

            modelBuilder.Entity("MilsatIMS.Models.Mentor", b =>
                {
                    b.Navigation("IMS");
                });

            modelBuilder.Entity("MilsatIMS.Models.Session", b =>
                {
                    b.Navigation("IMS");
                });

            modelBuilder.Entity("MilsatIMS.Models.User", b =>
                {
                    b.Navigation("Intern")
                        .IsRequired();

                    b.Navigation("Mentor")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
